<UserControl x:Class="b7.Packets.View.LogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:root="clr-namespace:b7.Packets"
             xmlns:local="clr-namespace:b7.Packets.View"
             xmlns:global="clr-namespace:b7.Packets"
             xmlns:xabboMessages="clr-namespace:Xabbo.Messages;assembly=Xabbo.Common"
             xmlns:viewModel="clr-namespace:b7.Packets.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type viewModel:LogViewManager}}"
             Background="White"
             FontFamily="Hack,Consolas">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="420" />
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" 
                               Margin="2"
                               VerticalAlignment="Center"
                               Text="Filter" />
                    <TextBox DockPanel.Dock="Right"
                             Margin="2" Padding="2"
                             Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>

                <ListView Grid.Row="1" Margin="2" ItemsSource="{Binding Logs}"
                  SelectedItem="{Binding SelectedItem}"
                  SelectionChanged="ListView_SelectionChanged"
                          Grid.IsSharedSizeScope="True">
                    <ListView.InputBindings>
                        <KeyBinding Command="{Binding ClearLogsCommand}" Key="E" Modifiers="Ctrl" />
                    </ListView.InputBindings>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Clear logs" Command="{Binding ClearLogsCommand}" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOutgoing}" Value="True">
                                    <Setter Property="Foreground" Value="DarkCyan" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOutgoing}" Value="False">
                                    <Setter Property="Foreground" Value="DarkRed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBlocked}" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Red" Opacity="0.3" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridView.Columns>
                                <!-- Direction pointer -->
                                <GridViewColumn Width="26">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DirectionPointer}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="100" Header="time">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Timestamp, StringFormat=HH:mm:ss.fff}"
                                               TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="180" Header="name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="SzClient" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Border Margin="4,0" Padding="2,0"
                                                        HorizontalAlignment="Right"
                                                        CornerRadius="2"
                                                        Opacity="0.6"
                                                        Visibility="Collapsed">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsOutgoing}" Value="True">
                                                                    <Setter Property="Background" Value="DarkCyan" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsOutgoing}" Value="False">
                                                                    <Setter Property="Background" Value="DarkRed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <TextBlock Foreground="White">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="?" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsFlashName}" Value="True">
                                                                        <Setter Property="Text" Value="f" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsUnityName}" Value="True">
                                                                        <Setter Property="Text" Value="u" />
                                                                    </DataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding IsFlashName}" Value="True" />
                                                                            <Condition Binding="{Binding IsUnityName}" Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="Text" Value="*" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Border>
                                                <TextBlock 
                                                    Grid.Column="1" 
                                                    Text="{Binding Name}"
                                                    TextTrimming="CharacterEllipsis"
                                                />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="80" Header="length">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Length, StringFormat=N0}"
                                               TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                </ListView>
                
                <!-- Global blocking -->
                <WrapPanel Grid.Row="2" HorizontalAlignment="Right">
                    <CheckBox Margin="2"
                              VerticalAlignment="Center"
                              VerticalContentAlignment="Center"
                              Content="Block"
                              IsChecked="{Binding BlockPackets}" />
                    <RadioButton Margin="2"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 GroupName="BlockDirection"
                                 Content="Incoming"
                                 IsChecked="{Binding BlockIncoming}" />
                    <RadioButton Margin="2"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 GroupName="BlockDirection"
                                 Content="Outgoing"
                                 IsChecked="{Binding BlockOutgoing}" />
                    <RadioButton Margin="2"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 GroupName="BlockDirection"
                                 Content="Both"
                                 IsChecked="{Binding BlockBoth}" />
                </WrapPanel>
            </Grid>

            <GridSplitter Grid.Column="1" Margin="-2"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="Transparent" />

            <TextBox
                 Grid.Column="2"
                 Margin="2" Padding="2"
                 Text="{Binding PacketInfo}"
                 VerticalScrollBarVisibility="Visible"
                 HorizontalScrollBarVisibility="Auto"
                 FontFamily="Hack,Consolas"
                 IsReadOnly="True" />
            
        </Grid>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Margin="2" Padding="3"
                    FontWeight="Bold" BorderBrush="DarkRed"
                    Content="&lt;&lt;" ToolTip="Send to client"
                    IsEnabled="{Binding IsConnected}"
                    Command="{Binding SendToClientCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="DarkRed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Background>
                    <SolidColorBrush Color="Red" Opacity="0.2" />
                </Button.Background>
            </Button>
            <TextBox Grid.Column="1" Margin="2" Padding="2"
                     VerticalContentAlignment="Center"
                     Text="{Binding ComposerText}"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Auto"
                     MaxLines="10" />
            <Button Grid.Column="2" Margin="2" Padding="3"
                    FontWeight="Bold" BorderBrush="DarkCyan"
                    Content="&gt;&gt;" ToolTip="Send to server"
                    IsEnabled="{Binding IsConnected}"
                    Command="{Binding SendToServerCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="DarkCyan" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Background>
                    <SolidColorBrush Color="Cyan" Opacity="0.2" />
                </Button.Background>
            </Button>
            <StackPanel Grid.Column="3" Orientation="Horizontal">
                <ComboBox Margin="2" Padding="8,2" Width="100"
                          HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                          SelectedItem="{Binding Direction}">
                    <xabboMessages:Direction>Incoming</xabboMessages:Direction>
                    <xabboMessages:Direction>Outgoing</xabboMessages:Direction>
                    <xabboMessages:Direction>Both</xabboMessages:Direction>
                </ComboBox>
                <Button Margin="2" Padding="0" Width="60"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Command="{Binding ToggleLoggingCommand}">
                    <Button.Content>
                        <Grid ClipToBounds="True">
                            <ProgressBar BorderThickness="0" IsIndeterminate="True"
                                         VerticalAlignment="Stretch">
                                <ProgressBar.RenderTransform>
                                    <ScaleTransform ScaleX="5" />
                                </ProgressBar.RenderTransform>
                                <ProgressBar.Style>
                                    <Style TargetType="{x:Type ProgressBar}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Setter Property="Foreground" Value="Orange" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLogging}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                                <Setter Property="Foreground" Value="LimeGreen" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ProgressBar.Style>
                            </ProgressBar>
                            <TextBlock Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="Start" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLogging}" Value="True">
                                                <Setter Property="Text" Value="Stop" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsLogging}" Value="True" />
                                                    <Condition Binding="{Binding IsConnected}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="Standby" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
        
    </Grid>
</UserControl>
