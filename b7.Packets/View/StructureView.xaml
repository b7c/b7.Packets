<UserControl x:Class="b7.Packets.View.StructureView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:b7.Packets.View"
             xmlns:global="clr-namespace:b7.Packets"
             xmlns:viewModel="clr-namespace:b7.Packets.ViewModel"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type viewModel:StructureViewManager}}"
             UseLayoutRounding="True"
             Background="White"
             FontFamily="Hack,Consolas" FontSize="11">
    <UserControl.Resources>
        <Style x:Key="SpanBorder" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding OpenLeft}" Value="True">
                    <Setter Property="BorderThickness" Value="0,1,1,1" />
                    <Setter Property="CornerRadius" Value="0,2,2,0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding OpenRight}" Value="True">
                    <Setter Property="BorderThickness" Value="1,1,0,1" />
                    <Setter Property="CornerRadius" Value="2,0,0,2" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding OpenLeft}" Value="True" />
                        <Condition Binding="{Binding OpenRight}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" Value="0,1,0,1" />
                    <Setter Property="CornerRadius" Value="0" />
                </MultiDataTrigger>
                <!-- Colors -->
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Boolean}">
                    <Setter Property="Background" Value="{StaticResource BoolBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource BoolForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Byte}">
                    <Setter Property="Background" Value="{StaticResource ByteBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource ByteForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int16}">
                    <Setter Property="Background" Value="{StaticResource ShortBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource ShortForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int32}">
                    <Setter Property="Background" Value="{StaticResource IntBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource IntForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Single}">
                    <Setter Property="Background" Value="{StaticResource FloatBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource FloatForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int64}">
                    <Setter Property="Background" Value="{StaticResource LongBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource LongForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.String}">
                    <Setter Property="Background" Value="{StaticResource StringBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource StringForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Border x:Key="ByteInfo" d:DataContext="{d:DesignInstance Type={x:Type viewModel:ByteInfoViewModel}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MaxWidth="300" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- Bool -->
                <TextBlock Text="{Binding StringValue}" />
            </Grid>
        </Border>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="440" />
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ItemsControl Margin="2" ItemsSource="{Binding DataRows}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                      FontSize="11">

            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type viewModel:DataRowViewModel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="OffsetGroup" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="HexGroup" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="AsciiGroup" />
                        </Grid.ColumnDefinitions>
                        <!-- Offset -->
                        <TextBlock Grid.Column="0"
                                   Margin="0,0,4,0"
                                   VerticalAlignment="Center"
                                   Foreground="LightSlateGray"
                                   Visibility="{Binding ShowOffset, Converter={StaticResource BoolToVisibilityConverter}}"
                                   Text="{Binding Offset, StringFormat=x4}" />
                        <!-- Hex view -->
                        <ItemsControl Grid.Column="1" ItemsSource="{Binding Items}">
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding Column}" />
                                    <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}" />
                                    <Setter Property="Grid.Row" Value="{Binding Row}" />
                                    <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type viewModel:ByteViewModel}">
                                    <TextBlock
                                            Margin="2"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Text="{Binding Value, StringFormat=x2}" 
                                            Foreground="{Binding Brush}"
                                            ToolTip="{StaticResource ByteInfo}"
                                            ToolTipService.IsEnabled="False"
                                            ToolTipService.InitialShowDelay="0"
                                            ToolTipService.ShowDuration="30000"
                                            ToolTipOpening="TextBlock_ToolTipOpening" />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type viewModel:ByteSpanViewModel}">
                                    <Border Margin="1,0,1,2" Style="{StaticResource SpanBorder}"
                                            IsHitTestVisible="False" />
                                </DataTemplate>
                            </ItemsControl.Resources>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H0" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H1" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H2" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H3" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H4" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H5" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H6" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H7" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H8" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H9" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H10" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H11" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H12" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H13" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H14" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="H15" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <!-- Hex / ASCII separator -->
                        <Canvas Grid.Column="2"
                                HorizontalAlignment="Center"
                                Width="1"
                                Background="LightGray" />

                        <!-- ASCII view -->
                        <ItemsControl Grid.Column="3" ItemsSource="{Binding Items}">
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding Column}" />
                                    <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}" />
                                    <Setter Property="Grid.Row" Value="{Binding Row}" />
                                    <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type viewModel:ByteViewModel}">
                                    <TextBlock
                                            Margin="-1,1,0,2"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding Brush}"
                                            Text="{Binding AsciiValue}" />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type viewModel:ByteSpanViewModel}">
                                    <Border Margin="0,-0,1,2" Style="{StaticResource SpanBorder}" />
                                </DataTemplate>
                            </ItemsControl.Resources>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A0" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A1" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A2" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A3" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A4" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A5" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A6" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A7" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A8" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A9" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A10" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A11" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A12" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A13" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A14" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="A15" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </DataTemplate>
            </ItemsControl.Resources>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling"
                                            Grid.IsSharedSizeScope="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer CanContentScroll="True" 
                                      Padding="{TemplateBinding Padding}"
                                      Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>

        </ItemsControl>

        <GridSplitter Grid.Column="1" Margin="-2"
                      HorizontalAlignment="Stretch"
                      Background="Transparent" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0">
                <Button DockPanel.Dock="Right" Margin="2" Padding="2" Command="{Binding CopyComposedCommand}" Content="Copy composed">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="2" />
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBlock DockPanel.Dock="Left" Margin="2" VerticalAlignment="Center"
                           FontSize="14" Text="{Binding PacketName}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="DarkSlateGray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOutgoing}" Value="True">
                                    <Setter Property="Foreground" Value="DarkCyan" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOutgoing}" Value="False">
                                    <Setter Property="Foreground" Value="DarkRed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DockPanel>

            <ListView Grid.Row="1" Margin="2" ItemsSource="{Binding StructureItems}">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Boolean}">
                                <Setter Property="Foreground" Value="{StaticResource BoolForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Byte}">
                                <Setter Property="Foreground" Value="{StaticResource ByteForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int16}">
                                <Setter Property="Foreground" Value="{StaticResource ShortForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int32}">
                                <Setter Property="Foreground" Value="{StaticResource IntForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Single}">
                                <Setter Property="Foreground" Value="{StaticResource FloatForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.Int64}">
                                <Setter Property="Foreground" Value="{StaticResource LongForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static sys:TypeCode.String}">
                                <Setter Property="Foreground" Value="{StaticResource StringForeground}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Width="45" Header="offs">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Offset, StringFormat=x4}" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="45" Header="len">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Length}" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="60" Header="type">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TypeName}" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="250" Header="value">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ValueString}" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>

            <WrapPanel Grid.Row="2" Orientation="Horizontal">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Style.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2" />
                            </Style>
                        </Style.Resources>
                        <Setter Property="FontSize" Value="11" />
                        <Setter Property="Border.CornerRadius" Value="3" />
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="bool">
                                <Setter Property="BorderBrush" Value="{StaticResource BoolForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource BoolForeground}" />
                                <Setter Property="Background" Value="{StaticResource BoolBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="byte">
                                <Setter Property="BorderBrush" Value="{StaticResource ByteForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource ByteForeground}" />
                                <Setter Property="Background" Value="{StaticResource ByteBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="short">
                                <Setter Property="BorderBrush" Value="{StaticResource ShortForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource ShortForeground}" />
                                <Setter Property="Background" Value="{StaticResource ShortBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="int">
                                <Setter Property="BorderBrush" Value="{StaticResource IntForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource IntForeground}" />
                                <Setter Property="Background" Value="{StaticResource IntBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="long">
                                <Setter Property="BorderBrush" Value="{StaticResource LongForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource LongForeground}" />
                                <Setter Property="Background" Value="{StaticResource LongBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="float">
                                <Setter Property="BorderBrush" Value="{StaticResource FloatForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource FloatForeground}" />
                                <Setter Property="Background" Value="{StaticResource FloatBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="string">
                                <Setter Property="BorderBrush" Value="{StaticResource StringForeground}" />
                                <Setter Property="Foreground" Value="{StaticResource StringForeground}" />
                                <Setter Property="Background" Value="{StaticResource StringBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Foreground" Value="DarkGray" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </WrapPanel.Resources>
                <Button Margin="2" Padding="4,1" Content="bool" Tag="bool"
                        Command="{Binding AddBoolCommand}" IsEnabled="{Binding CanAddBool}" />
                <Button Margin="2" Padding="4,1" Content="byte" Tag="byte"
                        Command="{Binding AddByteCommand}" IsEnabled="{Binding CanAddByte}" />
                <Button Margin="2" Padding="4,1" Content="short" Tag="short"
                        Command="{Binding AddShortCommand}" IsEnabled="{Binding CanAddShort}" />
                <Button Margin="2" Padding="4,1" Content="int" Tag="int"
                        Command="{Binding AddIntCommand}" IsEnabled="{Binding CanAddInt}" />
                <Button Margin="2" Padding="4,1" Content="long" Tag="long"
                        Command="{Binding AddLongCommand}" IsEnabled="{Binding CanAddLong}" />
                <Button Margin="2" Padding="4,1" Content="float" Tag="float"
                        Command="{Binding AddFloatCommand}" IsEnabled="{Binding CanAddFloat}" />
                <Button Margin="2" Padding="4,1" Content="string" Tag="string"
                        Command="{Binding AddStringCommand}" IsEnabled="{Binding CanAddString}" />
                <Button Margin="2" Padding="4,1" Content="undo"
                        Command="{Binding UndoCommand}"
                        IsEnabled="{Binding CanUndo}" />
                <Button Margin="2" Padding="4,1" Content="clear"
                        Command="{Binding ClearCommand}"
                        IsEnabled="{Binding CanClear}" />
            </WrapPanel>
        </Grid>

    </Grid>

</UserControl> 
